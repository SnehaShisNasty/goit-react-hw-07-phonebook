{"version":3,"file":"static/js/728.85c815d6.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/Contacts/form/Form.module.css?3a5e","redux/selctors.js","components/Contacts/form/Form.jsx","webpack://react-homework-template/./src/components/Contacts/contactList/ContactList.module.css?931c","components/Contacts/contactList/ContactList.jsx","webpack://react-homework-template/./src/components/Contacts/filter/Filter.module.css?79f4","components/Contacts/filter/Filter.jsx","webpack://react-homework-template/./src/components/Contacts/Contact.module.css?0098","components/Contacts/Contact.jsx","pages/PhoneBooksPage/PhoneBooksPage.jsx"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__v9Auz\",\"label\":\"Form_label__hinnL\",\"input\":\"Form_input__VeVG3\",\"submit\":\"Form_submit__cVibs\"};","export const getAllContacts = store => store.contacts;\nexport const getFiltered = store => {\n  const { contacts, filter } = store;\n  const { items, isLoading, error } = contacts;\n  if (!filter) {\n    return contacts;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n\n  const filteredBooks = items.filter(({ name, phone }) => {\n    const normalizedTitle = name.toLowerCase();\n    const normalizedAuthor = phone.toLowerCase();\n\n    return (\n      normalizedAuthor.includes(normalizedFilter) ||\n      normalizedTitle.includes(normalizedFilter)\n    );\n  });\n\n  return {\n    items: filteredBooks,\n    isLoading,\n    error,\n  };\n};\nexport const getFilter = store => store.filter;\n","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from './Form.module.css';\n\nimport { getAllContacts } from '../../../redux/selctors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../../redux/contacts/contacts-operations';\nconst INITIAL_STATE = {\n  name: '',\n  phone: '',\n};\nconst Form = () => {\n  const [state, setState] = useState({ ...INITIAL_STATE });\n  const { items } = useSelector(getAllContacts);\n  const dispatch = useDispatch();\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onAddContact({ ...state });\n  };\n  const isDublicate = ({ name, phone }) => {\n    const normalizedName = name.toLowerCase();\n    const normalizedNumber = phone.toLowerCase();\n\n    const dublicate = items.find(item => {\n      const normalizedCurrentName = item.name.toLowerCase();\n      const normalizedCurrentNumber = item.phone.toLowerCase();\n      return (\n        normalizedCurrentName === normalizedName ||\n        normalizedCurrentNumber === normalizedNumber\n      );\n    });\n\n    return Boolean(dublicate);\n  };\n  const onAddContact = data => {\n    if (isDublicate(data)) {\n      return alert(`Book with ${data.phone} and ${data.name} already in list`);\n    }\n    dispatch(addContact(data));\n\n    reset();\n  };\n\n  const reset = () => {\n    setState({ name: '', phone: '' });\n  };\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label htmlFor={nameInputId} className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={state.name}\n          onChange={handleChange}\n          id={nameInputId}\n          required\n        />\n      </label>\n      <label htmlFor={numberInputId} className={css.label}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"phone\"\n          value={state.phone}\n          onChange={handleChange}\n          id={numberInputId}\n          required\n        />\n      </label>\n\n      <button type=\"submit\" className={css.submit}>\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__JFruW\",\"item\":\"ContactList_item__+lAjJ\",\"delete\":\"ContactList_delete__PvS9Z\"};","import css from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getFiltered } from '../../../redux/selctors';\nimport { useEffect } from 'react';\nimport {\n  fetchContacts,\n  deleteContact,\n} from '../../../redux/contacts/contacts-operations';\nexport const ContactList = () => {\n  const { items = [], isLoading, error } = useSelector(getFiltered);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (items.length === 0) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, items]);\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <ul className={css.list}>\n      {error && <p>{error}</p>}\n      {isLoading && <p>...Loading</p>}\n      {Boolean(items.length) &&\n        items.map(({ name, id, phone }) => (\n          <li key={id} className={css.item}>\n            {name}: {phone}\n            <button onClick={() => onDeleteContact(id)} className={css.delete}>\n              Delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Filter_form__ZUxlI\",\"filterLabel\":\"Filter_filterLabel__-02Nb\",\"filterInput\":\"Filter_filterInput__fgy9k\"};","import React from 'react';\nimport css from './Filter.module.css';\nimport { setFilter } from '../../../redux/filter/filter-slice';\nimport { useDispatch } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const changeFitler = ({ target }) => dispatch(setFilter(target.value));\n  return (\n    <form className={css.form}>\n      <label className={css.filterLabel}>\n        Filter\n        <input\n          type=\"text\"\n          onChange={changeFitler}\n          className={css.filterInput}\n        />\n      </label>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Contact_section__xMmp-\",\"titleContacts\":\"Contact_titleContacts__OjBT6\",\"title\":\"Contact_title__oR72+\"};","import React from 'react';\nimport Form from './form/Form';\nimport { ContactList } from './contactList/ContactList';\nimport { Filter } from './filter/Filter';\n\nimport css from './Contact.module.css';\nexport const Contact = () => {\n  return (\n    <section className={css.section}>\n      <h1 className={css.title}>Phonebook</h1>\n      <Form></Form>\n\n      <Filter></Filter>\n      <h2 className={css.titleContacts}> Contacts</h2>\n      <ContactList></ContactList>\n    </section>\n  );\n};\n","import { Contact } from 'components/Contacts/Contact';\nimport { Outlet } from 'react-router-dom';\n\nconst PhoneBooksPage = () => {\n  return (\n    <div>\n      <section>\n        <Contact></Contact>\n      </section>\n      <Outlet></Outlet>\n    </div>\n  );\n};\n\nexport default PhoneBooksPage;\n"],"names":["nanoid","size","arguments","length","undefined","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","getAllContacts","store","contacts","getFiltered","filter","items","isLoading","error","normalizedFilter","toLowerCase","_ref","name","phone","normalizedTitle","includes","INITIAL_STATE","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","useSelector","dispatch","useDispatch","handleChange","target","value","_defineProperty","onAddContact","data","_ref2","normalizedName","normalizedNumber","dublicate","find","item","normalizedCurrentName","normalizedCurrentNumber","Boolean","isDublicate","alert","concat","addContact","reset","nameInputId","numberInputId","_jsxs","onSubmit","e","preventDefault","className","css","children","htmlFor","_jsx","type","onChange","required","ContactList","_useSelector","_useSelector$items","useEffect","fetchContacts","map","onClick","deleteContact","onDeleteContact","Filter","setFilter","Contact","Form","Outlet"],"sourceRoot":""}